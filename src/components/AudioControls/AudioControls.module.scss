.Controls {
	position: fixed;
	bottom: 0;
	height: 95px;
	width: 100%;
	background-color: var(--primary_20);
	transition: height 0.1s;
}

@media (min-width: 800px) {
	.Controls {
		height: 72px;
	}
}

/* Clear input slider styling */
.progressBar {
	-webkit-appearance: none;
	width: 100%;
	background: var(--primary_10);
}

.progressBar::-webkit-slider-thumb {
	-webkit-appearance: none;
}

.progressBar:focus {
	outline: none;
}

.progressBar::-ms-track {
	width: 100%;
	cursor: pointer;

	background: var(--primary_10);
	border-color: transparent;
	color: transparent;
}

.progressIndicator {
	position: absolute;
	z-index: 2;
	left: 0;
	top: 0;
	transform: translateY(-50%);
	display: block;
	height: 5px;
	background: var(--pop);
	pointer-events: none;
	transition: height 0.1s;
}

/* Slider styling */
.progressBar {
	position: absolute;
	z-index: 1;
	top: 0;
	transform: translateY(-50%);
	display: block;
	width: 100%;
	height: 5px;
	cursor: pointer;
	transition: height 0.1s;
}

.progressBar:hover + .progressIndicator {
	height: 10px;
}
.progressBar:hover {
	height: 10px;
}

/* Thumb Styling */
/* Firefox */
.progressBar::-moz-range-thumb {
	border: none;
	height: 10px;
	width: 10px;
	border-radius: 50%;
	background: transparent;
	cursor: pointer;
	transition: all 0.1s;
}

/* Hovering over thumb */
.progressBar::-moz-range-thumb:hover {
	width: 20px;
	height: 20px;
}

/* When thumb is clicked/focused */
.progressBar:focus::-moz-range-thumb {
	background: var(--pop);
}

/* Special styling for WebKit/Blink */
.progressBar::-webkit-slider-thumb {
	-webkit-appearance: none;
	margin-top: 0;
	border: none;
	height: 10px;
	width: 10px;
	border-radius: 50%;
	background: transparent;
	cursor: pointer;
	transition: all 0.1s;
}

/* Hovering over thumb */
.progressBar::-webkit-slider-thumb:hover {
	width: 20px;
	height: 20px;
}

/* When thumb is clicked/focused */
.progressBar:focus::-webkit-slider-thumb {
	background: var(--pop);
}

/* All the same stuff for IE */
.progressBar::-ms-thumb {
	border: none;
	height: 10px;
	width: 10px;
	border-radius: 50%;
	background: transparent;
	cursor: pointer;
	transition: all 0.1s;
}

/* Hovering over thumb */
.progressBar::-ms-thumb:hover {
	width: 20px;
	height: 20px;
}

/* When thumb is clicked/focused */
.progressBar:focus::-ms-thumb {
	background: var(--pop);
}

.buttonContainer {
	height: 50px;
	width: 100%;
	max-width: 400px;
	margin: 10px auto 0;

	display: flex;
	flex: none;
	justify-content: center;
	align-items: center;
	transition: margin 0.1s;
}

@media (min-width: 800px) {
	.buttonContainer {
		margin: 5px auto 0;
	}
}

.buttons {
	position: relative;
	width: 3rem;
	display: block;
	border: none;
	outline: none;
	margin: 0;
	text-decoration: none;
	background-color: transparent;
	color: var(--primary_100);
	cursor: pointer;
	text-align: center;
	-webkit-appearance: none;
	-moz-appearance: none;
	box-shadow: none;
	padding: 0.75rem;
	border-radius: 5px;
	margin: 2rem auto;
	font-size: 1.1rem;

	&:active {
		background-color: var(--primary_30);
	}

	display: flex;
	flex: none;
	justify-content: center;
	align-items: center;

	&:disabled .icon {
		opacity: 50%;
	}
}

@media (min-width: 800px) {
	.buttons:after {
		content: attr(data-info);
		background-color: var(--primary_100);
		color: var(--primary_20);
		position: absolute;
		top: 0%;
		transform: translateY(-100%);
		border-radius: 5px;
		padding: 0.5rem;
		opacity: 0;
		transition: opacity 0.2s 0s, z-index 0s 0.2s;
		z-index: -10;
	}

	.buttons:hover:after {
		opacity: 1;
		z-index: 10;
		transition: opacity 0.2s 0.75s, z-index 0s 0.75s;
	}
}

.icon {
	transition: opacity 0.2s;
	margin: 0;
	padding: 0;
	height: 20px;
	width: 20px;
	z-index: 1; /* preventing icon overlap */
}

.loading {
	composes: icon;
	animation-name: rotateLoad;
	animation-duration: 2s;
	animation-iteration-count: infinite;
}

.playSpeedButton {
	composes: buttons;
	width: 3.75rem;

	p {
		text-align: center;
		width: 100%;
		margin: auto;
	}
}

@keyframes rotateLoad {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
}

.recordingContainer {
	position: absolute;
	height: 60px;
	width: 60px;
	left: 50%;
	top: 0;
	transform: translate(-50%, -100%);
	border-radius: 50% 50% 0 0;
	background-color: var(--primary_20);

	&,
	div {
		display: flex;
		align-items: center;
		justify-content: center;
	}

	div {
		height: 48px;
		width: 48px;
		border-radius: 50%;
		background-color: var(--primary_20);
		border: 1px solid var(--primary_100);
	}
}

.recordingButton {
	transition: 0.1s;
	height: calc(100% - 10px);
	width: calc(100% - 10px);
	border-radius: 50%;
	outline: 0;
	border: 0;
	cursor: pointer;
	background-color: transparent;

	&:focus {
		outline: 0;
		border: 0;
		background-color: transparent;
	}

	// red recording indicator center
	// default state: full circle
	span:nth-of-type(1),
	span:nth-of-type(2) {
		position: absolute;
		display: block;
		background: var(--red);
		transition: 0.1s ease;
		pointer-events: none;
		width: 100%;
		height: 100%;
		border-radius: 50%;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}

// recording is in progress
.recording {
	span:nth-of-type(1),
	span:nth-of-type(2) {
		border-radius: 5px;
		height: 60%;
		width: 60%;
	}
}

// recording is complete
.deleteRecording {
	span:nth-of-type(1),
	span:nth-of-type(2) {
		width: 2px;
		height: 80%;
		border: 0;
	}
	span:nth-of-type(1) {
		transform: translate(-50%, -50%) rotate(-45deg);
	}
	span:nth-of-type(2) {
		transform: translate(-50%, -50%) rotate(45deg);
	}
}
